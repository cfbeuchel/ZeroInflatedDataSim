~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# README: Zero-inflated data simulation                                      #
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

~~~~~~~~~~~~~~~~~~~ + 1. INTRODUCTION + ~~~~~~~~~~~~~~~~~~~

	1.1 Basic description

This folder is completely self-contained in terms of data requirements and
contains all scripts necessary for it's execution. 

Purpose of this project is a simulation study of the effects of degraded data
quality, in this case the violation of the normality assumption when fitting
linear models. 

	1.2 Folder organization

This folder is organized as a GitHub repository and is hosted on:

https://github.com/cfbeuchel/ZeroInflatedDataSim



	1.3 Folder explanation and structure

The project is organized in several sub-folders with the goal of making the
management more or less self-explanatory. Recurring folders found in in the
project folder are:

	* _archive: outdated/old files
	* doc: documentation for the specific folder
	* lit: papers etc. concerning the subject of the folder
	* plots: some plots generated outside of the script
	* results: files generated by scripts in the folder
	* data: input files specifically needed by the
                scripts in the folder

~~~~~~~~~~~~~~~~~~~ + 2. REQUIREMENTS + ~~~~~~~~~~~~~~~~~~~

	2.1 Software requirements

This project uses R for all its computations and therefore requires R. At the
time of writing this README, R 3.4.3 was used in connection with RStudio
1.1.419. R depends on additional packages that extend its base functionality.
This project makes heavy use of such packages, that can be found on the
official ressource website https://cran.r-project.org/.  Additionally, two
custom packages and some additional functions were used. The custom packages
are:

	* CarlHelpR (https://github.com/cfbeuchel/CarlHelpR)
	* toolboxH (https://github.com/holgerman/toolboxH)

These packages mostly contain convenience-functions and should work on most
machines. Some additional, project specific functions were not included in any
of the above packages but instead were organized in the subfolder
'/1703_ge_metab_a1_b3_sorbs/functions/'. These functions are loaded in the
scripts when needed.

All the R-packages the scripts rely on are always listed in the specific
script and should installed prior to executing each script.

	2.2 Data requirements

	2.2.1 Local requirements (within project folder)

This analysis depends on several files that are results of other sub-folders.
The required files for this analysis are:

	* Metablite data (result of /170824_MetabAnnotTab)
	* Covariate data (result of /171113_CovarAnnotTab)
	* Annotation tables (result from all *AnnotTab folders)
	* Functions from /functions/

All these result files should already be present in their respective
/results/-folders. If this is not the case, the computations can be repeaded
by executing the scripts in the above mentioned folders in the correct order.
This will be detailed in each corresponding SUB_README.txt.

	2.2.2 Global requirements (/genstat/)

The scripts in this folder do not rely on files from anywhere outside of the
project-folder.

~~~~~~~~~~~~~~~~~~~~~~~~ + 3. FOLDER CONTENT + ~~~~~~~~~~~~~~~~~~~~~~~~

	3.1 File description

The analyses in this folder are organized as RMarkdown-documents that are to
be executed ('Knitr'-ed) in RStudio to both run all analyses and create the
result files as well as generate a HTML report. This depends on several
R-packages that are all listed in the Rmarkdown (with the ending .Rmd) files.
The confounder analysis of the metabolites is segmented into five steps, as is
indicated by the upper-case 'STEP' in the names of the documents. The
computations done by each script are the following:

	* STEP1: Data consolidation and preparation for STEP2 including some
	         last checks
	* STEP2: Fitting of univariate metabolite ~ covariate linear model 
	* STEP3: Evaluation of results from STEP2 and determination of
	         covariates for the multivariate metabolite ~ covariate
		 model in STEP4
	* STEP4: Fitting of multivariate model
	* STEP5: Evaluation of results from STEP4 and determination of final
	         confounder model

	3.4 Result files

	3.4.1 In /results/

Consolidated metabolite-covariate files for all cohorts and summary statistics
from the uni- and multivariate associaton, saved as .csv.

	3.4.2 In /results/RData_objects

Consolidated metabolite-covariate files for all cohorts, same as in the
/results/-folder, saved as .RData object for more convenient loading.

~~~~~~~~~~~~~~~~~~~~~~~~ + 4. PROCEDURE + ~~~~~~~~~~~~~~~~~~~~~~~~

	4.1 Order of execution

The analysis is organized in five steps that are to be executed in the order
indicated in the 'STEP' in each file name. The order of execution is
therefore: 

	1. 180206_be_a1_sorb_STEP1_metabConfounderAnalysis.Rmd
	2. 180206_be_a1_sorb_STEP2_metabConfounderAnalysis.Rmd
	3. 180206_be_a1_sorb_STEP3_metabConfounderAnalysis.Rmd
	4. 180208_be_a1_sorb_STEP4_metabConfounderAnalysis.Rmd
	5. 180208_be_a1_sorb_STEP5_metabConfounderAnalysis.Rmd

	4.2 Initiation requirements

The RMarkdown-documents are organized in chunks, subdivisions in the code that
can be executed seperately in a convenient way. Each document begins with
several specifications for the HTML-rendering. The following code chunks each
begin with some form of '```{r -chunk name-}' and end with the same '```'. The first
two chunks of each STEP initiate the Session. The chunk named 'knitr' sets
some options for the rendering of the HTML and can remain unchanged. The chunk
'initiate' load all required R-packages. All packages have to be present in
the .libPaths(). The first argument of the chunk, 'r_on_server' must be set by
every user to 'TRUE', when working from an RStudio session from one of the
IMISE-servers and to 'FALSE', when operating locally. Additionally, when
setting 'r_on_server <- TRUE', the variable 'computer' must be set to be the
name of the folder acting as package-library in:

'/net/ifs1/san_projekte/projekte/genstat/07_programme/rpackages'.

When operating on forostar, the preset 'computer <- "forostar"' will work.
Apart from that, pressing Ctrl+Shift+K or the 'Knit to HTML'-button will
execute the script and generate the HTML-report as well as all result files
for that specific step.
